[buildout]
eggs-directory = ${buildout:directory}/eggs
download-cache = ${buildout:directory}/downloads
versions = versions
#allow-picked-versions = false
#index = file://${buildout:directory}/downloads/dist
#find-links = ${buildout:directory}/downloads/dist

parts =
    lxml
    eggs
    structure
    
    nginx
    nginx-conf
    
    gunicorn-ctl
    paster-ctl

#    uwsgi-download
#    uwsgi
#    uwsgi-ctl

develop =
    src/dv.xdvserver

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml
libxml2-url = ${buildout:download-cache}/libxml2-2.7.7.tar.gz
libxslt-url = ${buildout:download-cache}/libxslt-1.1.26.tar.gz

[eggs]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    PasteScript
    eventlet 
    gunicorn
    dv.xdvserver
    Deliverance
    xdv
interpreter = python-all

[structure]
recipe = plone.recipe.command
command =
    mkdir ${buildout:directory}/var/log
    mkdir ${buildout:directory}/var/run

[nginx]
recipe = zc.recipe.cmmi
url = file://${buildout:download-cache}/nginx-0.7.65-html-xslt-2.tar.gz
# The SSI bug was fixed in nginx-0.7.65-html-xslt-2.tar.gz
md5sum = f863bdfdbeb01c11677d856c78716b35
extra_options =
    --conf-path=${buildout:directory}/etc/nginx.conf
    --sbin-path=${buildout:directory}/bin
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --http-log-path=${buildout:directory}/var/log/nginx-access.log
    --pid-path=${buildout:directory}/var/nginx.pid
    --lock-path=${buildout:directory}/var/nginx.lock
    --with-http_stub_status_module
    --with-http_xslt_module
    --with-libxml2=${buildout:directory}/parts/lxml/libxml2
    --with-libxslt=${buildout:directory}/parts/lxml/libxslt
    --add-module=${buildout:directory}/parts/uwsgi/nginx
#    --with-debug --with-cc-opt="-O0" # helps debugging with gdb

[nginx-conf]
recipe = collective.recipe.template
port = 8000
content = ${buildout:directory}/src/content
theme = ${buildout:directory}/src/theme
theme.xsl = ${buildout:directory}/theme.xsl
input = ${buildout:directory}/etc/nginx.conf.in
output = ${buildout:directory}/etc/nginx.conf

[gunicorn-ctl]
recipe = collective.recipe.template
mode = 755
input    = ${buildout:directory}/etc/ctl.in
output   = ${buildout:directory}/bin/gunicornctl
pidfile  = ${buildout:directory}/var/run/gunicorn.pid
command = ${buildout:directory}/bin/gunicorn_paster -D -w 1 -p ${:pidfile} --log-file=${buildout:directory}/var/log/gunicorn.log ${buildout:directory}/etc/gunicorn.ini

[paster-ctl]
recipe = collective.recipe.template
mode = 755
input    = ${buildout:directory}/etc/ctl.in
output   = ${buildout:directory}/bin/pasterctl
pidfile  = ${buildout:directory}/var/run/paster.pid
command = ${buildout:directory}/bin/paster serve --daemon --pid-file ${:pidfile} --log-file=${buildout:directory}/var/log/paster.log ${buildout:directory}/etc/paster.ini

#[uwsgi-download]
#recipe = hexagonit.recipe.download
#url = file://${buildout:download-cache}/uwsgi-0.9.5.1.tar.gz
#strip-top-level-dir = true

#[uwsgi]
#recipe = gp.recipe.pip
#dependent-scripts = true
#install = ${buildout:download-cache}/uwsgi-0.9.5.1.tar.gz
#eggs = ${eggs:eggs}
#interpreter = python-all

#[uwsgi-ctl]
#recipe = collective.recipe.template
#mode = 755
#input    = ${buildout:directory}/etc/ctl.in
#output   = ${buildout:directory}/bin/wsgictl
#pidfile  = ${buildout:directory}/var/run/uwsgi.pid
#command = ${buildout:directory}/bin/uwsgi --paste config:${buildout:directory}/etc/paste.ini -p 4 -M --logto ${buildout:directory}/var/log/uwsgi.log --pidfile ${:pidfile} -s 127.0.0.1:8000

[versions]
zc.buildout = 1.4.3
distribute = 0.6.10
setuptools = 0.6c11
z3c.recipe.staticlxml = 0.7.1
zc.recipe.cmmi = 1.3.1
zc.recipe.egg = 1.2.3b2
Deliverance = 0.3c4
simplejson = 2.1.1
chardet = 1.0.1
WSGIFilter = 0.2
PasteScript = 1.7.3
Paste = 1.7.3.1
DevAuth = 0.1
WebError = 0.10.2
Pygments = 1.3.1
Tempita = 0.4
WSGIProxy = 0.2
WebOb = 0.9.8
lxml = 2.2.6
HTTPEncode = 0.1
PasteDeploy = 1.3.3
httplib2 = 0.6.0
